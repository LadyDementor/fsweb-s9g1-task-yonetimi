{"ast":null,"code":"var _jsxFileName = \"C:\\\\GITHUP DOSYALAR\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s2 = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSchema = yup.object().shape({\n  title: yup.string().required(\"Task başlığı yazmalısınız\").min(3, \"Task başlığı en az 3 karakter olmalı\"),\n  description: yup.string().required(\"Task açıklaması yazmalısınız\").min(10, \"Task açıklaması en az 10 karakter olmalı\"),\n  people: yup.array().max(3, \"En fazla 3 kişi seçebilirsiniz\").min(1, \"Lütfen en az bir kişi seçin\")\n});\nexport default function TaskHookForm() {\n  _s2();\n  var _s = $RefreshSig$(),\n    _errors$people;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema)\n  });\n  const TaskForm = _ref => {\n    _s();\n    let {\n      kisiler,\n      submitFn\n    } = _ref;\n    const {\n      register,\n      handleSubmit,\n      formState: {\n        errors\n      }\n    } = useForm({\n      defaultValues: {\n        title: \"\",\n        description: \"\",\n        people: []\n      }\n    });\n  };\n  _s(TaskForm, \"IPjxuW9u4b3i3sz6iydDOETWQbU=\", false, function () {\n    return [useForm];\n  });\n  const {\n    formState: {\n      isValid\n    },\n    setError\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(formSemasi)\n  });\n  useEffect(() => {\n    setButtonDisabled(!isValid);\n  }, [isValid]);\n  const onSubmit = data => {\n    submitFn(data);\n    setFormData({\n      title: \"\",\n      description: \"\",\n      people: []\n    });\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    formAlaniniKontrolEt(name, value);\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handlePeopleChange = selectedOptions => {\n    const people = selectedOptions.map(option => option.value);\n    formAlaniniKontrolEt(\"people\", people);\n    setFormData({\n      ...formData,\n      people\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Ba\\u015Fl\\u0131k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      ...register(\"title\"),\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), formErrors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: formErrors.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"A\\xE7\\u0131klama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      ...register(\"description\"),\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), formErrors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: formErrors.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"people\",\n      children: \"Ki\\u015Filer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"people\",\n      name: \"people\",\n      options: kisiler,\n      isMulti: true,\n      onChange: handlePeopleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"people\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), formErrors.people && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: formErrors.people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...register(\"people\"),\n      multiple: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"person1\",\n        children: \"Person 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"person2\",\n        children: \"Person 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"person3\",\n        children: \"Person 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$people = errors.people) === null || _errors$people === void 0 ? void 0 : _errors$people.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: buttonDisabled,\n      children: \"G\\xF6nder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s2(TaskHookForm, \"HmTZq9cBR3AKrrxa6lD75DDJgQM=\", false, function () {\n  return [useForm, useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["useForm","yup","yupResolver","formSchema","object","shape","title","string","required","min","description","people","array","max","TaskHookForm","register","handleSubmit","formState","errors","resolver","TaskForm","kisiler","submitFn","defaultValues","isValid","setError","mode","formSemasi","useEffect","setButtonDisabled","onSubmit","data","setFormData","handleInputChange","event","name","value","target","formAlaniniKontrolEt","formData","handlePeopleChange","selectedOptions","map","option","formErrors","message","buttonDisabled"],"sources":["C:/GITHUP DOSYALAR/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  title: yup\r\n    .string()\r\n    .required(\"Task başlığı yazmalısınız\")\r\n    .min(3, \"Task başlığı en az 3 karakter olmalı\"),\r\n  description: yup\r\n    .string()\r\n    .required(\"Task açıklaması yazmalısınız\")\r\n    .min(10, \"Task açıklaması en az 10 karakter olmalı\"),\r\n  people: yup\r\n    .array()\r\n    .max(3, \"En fazla 3 kişi seçebilirsiniz\")\r\n    .min(1, \"Lütfen en az bir kişi seçin\"),\r\n});\r\n\r\nexport default function TaskHookForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(formSchema),\r\n  });\r\n  const TaskForm = ({ kisiler, submitFn }) => {\r\n    const {\r\n      register,\r\n      handleSubmit,\r\n      formState: { errors },\r\n    } = useForm({\r\n      defaultValues: {\r\n        title: \"\",\r\n        description: \"\",\r\n        people: [],\r\n      },\r\n    });\r\n  };\r\n  const {\r\n    formState: { isValid },\r\n    setError,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(formSemasi),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setButtonDisabled(!isValid);\r\n  }, [isValid]);\r\n\r\n  const onSubmit = (data) => {\r\n    submitFn(data);\r\n    setFormData({\r\n      title: \"\",\r\n      description: \"\",\r\n      people: [],\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    formAlaniniKontrolEt(name, value);\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handlePeopleChange = (selectedOptions) => {\r\n    const people = selectedOptions.map((option) => option.value);\r\n    formAlaniniKontrolEt(\"people\", people);\r\n    setFormData({ ...formData, people });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <label htmlFor=\"title\">Başlık</label>\r\n      <input\r\n        id=\"title\"\r\n        name=\"title\"\r\n        type=\"text\"\r\n        {...register(\"title\")}\r\n        onChange={handleInputChange}\r\n      />\r\n      {formErrors.title && <span>{formErrors.title}</span>}\r\n\r\n      <label htmlFor=\"description\">Açıklama</label>\r\n      <textarea\r\n        id=\"description\"\r\n        name=\"description\"\r\n        {...register(\"description\")}\r\n        onChange={handleInputChange}\r\n      />\r\n      {formErrors.description && <span>{formErrors.description}</span>}\r\n\r\n      <label htmlFor=\"people\">Kişiler</label>\r\n      <Select\r\n        id=\"people\"\r\n        name=\"people\"\r\n        options={kisiler}\r\n        isMulti\r\n        onChange={handlePeopleChange}\r\n      />\r\n      <input {...register(\"people\")} />\r\n\r\n      {formErrors.people && <span>{formErrors.people}</span>}\r\n\r\n      <select {...register(\"people\")} multiple>\r\n        <option value=\"person1\">Person 1</option>\r\n        <option value=\"person2\">Person 2</option>\r\n        <option value=\"person3\">Person 3</option>\r\n      </select>\r\n      <p>{errors.people?.message}</p>\r\n\r\n      <button type=\"submit\" disabled={buttonDisabled}>\r\n        Gönder\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}