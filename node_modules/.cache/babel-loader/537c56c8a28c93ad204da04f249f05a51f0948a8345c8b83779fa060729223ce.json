{"ast":null,"code":"var _jsxFileName = \"C:\\\\GITHUP DOSYALAR\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSchema = yup.object().shape({\n  title: yup.string().required(\"Task başlığı yazmalısınız\").min(3, \"Task başlığı en az 3 karakter olmalı\"),\n  description: yup.string().required(\"Task açıklaması yazmalısınız\").min(10, \"Task açıklaması en az 10 karakter olmalı\"),\n  people: yup.array().max(3, \"En fazla 3 kişi seçebilirsiniz\").min(1, \"Lütfen en az bir kişi seçin\")\n});\nexport default function TaskHookForm() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    },\n    setError\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(formSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: []\n    }\n  });\n  const kisiler = [{\n    value: \"Ömer\",\n    label: \"Ömer\"\n  }, {\n    value: \"Emre\",\n    label: \"Emre\"\n  }, {\n    value: \"Burcu\",\n    label: \"Burcu\"\n  }];\n  const defaultValues = {\n    title: \"\",\n    description: \"\",\n    people: []\n  };\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    people: []\n  });\n  const onSubmit = data => {\n    console.log(data);\n  };\n  const submitFn = data => {\n    console.log(data);\n  };\n  const formAlaniniKontrolEt = (name, value) => {\n    // form alanlarının geçerliliğini kontrol etmek için kullanılabilir\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    formAlaniniKontrolEt(name, value);\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handlePeopleChange = selectedOptions => {\n    const people = selectedOptions.map(option => option.value);\n    formAlaniniKontrolEt(\"people\", people);\n    setFormData({\n      ...formData,\n      people\n    });\n  };\n  useEffect(() => {\n    setButtonDisabled(!isValid);\n  }, [isValid]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"task-Form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\"),\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), \" \", \"className=\\\"input-error\\\"\", errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        id: \"description\",\n        name: \"description\",\n        ...register(\"description\"),\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"people\",\n        children: [\"Ki\\u015Filer\", /*#__PURE__*/_jsxDEV(Select, {\n          id: \"people\",\n          name: \"people\",\n          options: kisiler // Değiştirilmesi gereken satır\n          ,\n          isMulti: true,\n          onChange: handlePeopleChange,\n          defaultValue: defaultValues.people // Değiştirilmesi gereken satır\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), errors.people && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: errors.people.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }, this), \" /\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskHookForm, \"mpvh4bNC98TQQE8Vbs0z+S3dTcY=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["useForm","yup","yupResolver","React","useState","useEffect","Select","formSchema","object","shape","title","string","required","min","description","people","array","max","TaskHookForm","register","handleSubmit","formState","errors","isValid","setError","mode","resolver","defaultValues","kisiler","value","label","buttonDisabled","setButtonDisabled","formData","setFormData","onSubmit","data","console","log","submitFn","formAlaniniKontrolEt","name","handleInputChange","event","target","handlePeopleChange","selectedOptions","map","option","message"],"sources":["C:/GITHUP DOSYALAR/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  title: yup\r\n    .string()\r\n    .required(\"Task başlığı yazmalısınız\")\r\n    .min(3, \"Task başlığı en az 3 karakter olmalı\"),\r\n  description: yup\r\n    .string()\r\n    .required(\"Task açıklaması yazmalısınız\")\r\n    .min(10, \"Task açıklaması en az 10 karakter olmalı\"),\r\n  people: yup\r\n    .array()\r\n    .max(3, \"En fazla 3 kişi seçebilirsiniz\")\r\n    .min(1, \"Lütfen en az bir kişi seçin\"),\r\n});\r\n\r\nexport default function TaskHookForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isValid },\r\n    setError,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(formSchema),\r\n    defaultValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      people: [],\r\n    },\r\n  });\r\n  const kisiler = [\r\n    { value: \"Ömer\", label: \"Ömer\" },\r\n    { value: \"Emre\", label: \"Emre\" },\r\n    { value: \"Burcu\", label: \"Burcu\" },\r\n  ];\r\n\r\n  const defaultValues = {\r\n    title: \"\",\r\n    description: \"\",\r\n    people: [],\r\n  };\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    people: [],\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const submitFn = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const formAlaniniKontrolEt = (name, value) => {\r\n    // form alanlarının geçerliliğini kontrol etmek için kullanılabilir\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    formAlaniniKontrolEt(name, value);\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handlePeopleChange = (selectedOptions) => {\r\n    const people = selectedOptions.map((option) => option.value);\r\n    formAlaniniKontrolEt(\"people\", people);\r\n    setFormData({ ...formData, people });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setButtonDisabled(!isValid);\r\n  }, [isValid]);\r\n\r\n  return (\r\n    <form className=\"task-Form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          {...register(\"title\")}\r\n          onChange={handleInputChange}\r\n        />{\" \"}\r\n        className=\"input-error\"\r\n        {errors.title && <span>{errors.title.message}</span>}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          {...register(\"description\")}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.description && <span>{errors.description.message}</span>}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"people\">\r\n          Kişiler\r\n          <Select\r\n            id=\"people\"\r\n            name=\"people\"\r\n            options={kisiler} // Değiştirilmesi gereken satır\r\n            isMulti\r\n            onChange={handlePeopleChange}\r\n            defaultValue={defaultValues.people} // Değiştirilmesi gereken satır\r\n          />{\" \"}\r\n        </label>\r\n      </div>\r\n      {errors.people && <span>{errors.people.message}</span>} /\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}