{"ast":null,"code":"var _jsxFileName = \"C:\\\\GITHUP DOSYALAR\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSchema = yup.object().shape({\n  title: yup.string().required(\"Task başlığı yazmalısınız\").min(3, \"Task başlığı en az 3 karakter olmalı\"),\n  description: yup.string().required(\"Task açıklaması yazmalısınız\").min(10, \"Task açıklaması en az 10 karakter olmalı\"),\n  people: yup.array().max(3, \"En fazla 3 kişi seçebilirsiniz\").min(1, \"Lütfen en az bir kişi seçin\")\n});\nexport default function TaskHookForm() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    },\n    setError\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(formSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: []\n    }\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    people: []\n  });\n  const submitFn = data => {\n    console.log(data);\n  };\n  const formAlaniniKontrolEt = (name, value) => {\n    // form alanlarının geçerliliğini kontrol etmek için kullanılabilir\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    formAlaniniKontrolEt(name, value);\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handlePeopleChange = selectedOptions => {\n    const people = selectedOptions.map(option => option.value);\n    formAlaniniKontrolEt(\"people\", people);\n    setFormData({\n      ...formData,\n      people\n    });\n  };\n  useEffect(() => {\n    setButtonDisabled(!isValid);\n  }, [isValid]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Ba\\u015Fl\\u0131k\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      ...register(\"title\"),\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: errors.title.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"A\\xE7\\u0131klama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"description\",\n      name: \"description\",\n      ...register(\"description\"),\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: errors.description.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"people\",\n      children: \"Ki\\u015Filer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"people\",\n      name: \"people\",\n      options: kisiler // Değiştirilmesi gereken satır\n      ,\n      isMulti: true,\n      onChange: handlePeopleChange,\n      defaultValue: defaultValues.people // Değiştirilmesi gereken satır\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), errors.people && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: errors.people.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }, this), \" /\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskHookForm, \"mpvh4bNC98TQQE8Vbs0z+S3dTcY=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["useForm","yup","yupResolver","formSchema","object","shape","title","string","required","min","description","people","array","max","TaskHookForm","register","handleSubmit","formState","errors","isValid","setError","mode","resolver","defaultValues","buttonDisabled","setButtonDisabled","useState","formData","setFormData","submitFn","data","console","log","formAlaniniKontrolEt","name","value","handleInputChange","event","target","handlePeopleChange","selectedOptions","map","option","useEffect","onSubmit","message","kisiler"],"sources":["C:/GITHUP DOSYALAR/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nconst formSchema = yup.object().shape({\r\n  title: yup\r\n    .string()\r\n    .required(\"Task başlığı yazmalısınız\")\r\n    .min(3, \"Task başlığı en az 3 karakter olmalı\"),\r\n  description: yup\r\n    .string()\r\n    .required(\"Task açıklaması yazmalısınız\")\r\n    .min(10, \"Task açıklaması en az 10 karakter olmalı\"),\r\n  people: yup\r\n    .array()\r\n    .max(3, \"En fazla 3 kişi seçebilirsiniz\")\r\n    .min(1, \"Lütfen en az bir kişi seçin\"),\r\n});\r\n\r\nexport default function TaskHookForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isValid },\r\n    setError,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(formSchema),\r\n    defaultValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      people: [],\r\n    },\r\n  });\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    people: [],\r\n  });\r\n\r\n  const submitFn = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const formAlaniniKontrolEt = (name, value) => {\r\n    // form alanlarının geçerliliğini kontrol etmek için kullanılabilir\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    formAlaniniKontrolEt(name, value);\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handlePeopleChange = (selectedOptions) => {\r\n    const people = selectedOptions.map((option) => option.value);\r\n    formAlaniniKontrolEt(\"people\", people);\r\n    setFormData({ ...formData, people });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setButtonDisabled(!isValid);\r\n  }, [isValid]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <label htmlFor=\"title\">Başlık</label>\r\n      <input\r\n        id=\"title\"\r\n        name=\"title\"\r\n        type=\"text\"\r\n        {...register(\"title\")}\r\n        onChange={handleInputChange}\r\n      />\r\n      {errors.title && <span>{errors.title.message}</span>}\r\n      <label htmlFor=\"description\">Açıklama</label>\r\n      <textarea\r\n        id=\"description\"\r\n        name=\"description\"\r\n        {...register(\"description\")}\r\n        onChange={handleInputChange}\r\n      />\r\n      {errors.description && <span>{errors.description.message}</span>}\r\n      <label htmlFor=\"people\">Kişiler</label>\r\n      <Select\r\n        id=\"people\"\r\n        name=\"people\"\r\n        options={kisiler} // Değiştirilmesi gereken satır\r\n        isMulti\r\n        onChange={handlePeopleChange}\r\n        defaultValue={defaultValues.people} // Değiştirilmesi gereken satır\r\n      />\r\n      {errors.people && <span>{errors.people.message}</span>} /\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}